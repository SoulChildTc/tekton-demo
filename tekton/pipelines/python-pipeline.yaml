apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
  name: python-pipeline
  namespace: tekton-pipelines
spec:
  workspaces:
  - name: shared-data
  - name: pip-cache
  - name: dockerconfig
  - name: nginxdir
  params:
  - description: The git repository URL to clone from.
    name: url
    type: string
  - description: The git branch to clone.
    name: revision
    type: string
  - name: image
    type: string
  - name: report-subpath
    type: string
  - name: project
    type: string
  - name: commitcontent
    type: string
  tasks:
  - name: fetch-repo
    params:
    - name: url
      value: $(params.url)
    - name: revision
      value: $(params.revision)
    - name: depth
      value: "1"
    - name: sslVerify
      value: "false"
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
  - name: quality-gate
    runAfter:
    - fetch-repo
    taskRef:
      kind: Task
      name: python-quality-gate
    workspaces:
    - name: source
      workspace: shared-data
  - name: sonar-scanner
    runAfter:
    - quality-gate
    - coverage
    - pylint
    taskRef:
      kind: Task
      name: sonarqube-scanner
    workspaces:
    - name: source
      workspace: shared-data
  - name: pylint
    runAfter:
    - quality-gate
    taskRef:
      kind: Task
      name: pylint
    workspaces:
    - name: source
      workspace: shared-data
  - name: pytest
    runAfter:
    - quality-gate
    taskRef:
      kind: Task
      name: pytest
    workspaces:
    - name: source
      workspace: shared-data
    - name: pipcache
      workspace: pip-cache
  - name: coverage
    runAfter:
    - quality-gate
    #- pytest
    taskRef:
      kind: Task
      name: coverage
    workspaces:
    - name: source
      workspace: shared-data
    - name: pipcache
      workspace: pip-cache
  - name: generate-build-id
    taskRef:
      kind: Task
      name: generate-build-id
  - name: kaniko-build
    params:
    - name: IMAGE
      value: $(params.image):$(tasks.generate-build-id.results.build-id)
    runAfter:
    #- collect-report
    - sonar-scanner
    taskRef:
      kind: Task
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: dockerconfig
  - name: build-k8syaml-test
    runAfter:
    - kaniko-build
    - sonar-scanner
    taskRef: 
      name: set-iaas-repo
    params:
    - name: template_name
      value: python-standard.yml
    - name: image
      value: $(params.image):$(tasks.generate-build-id.results.build-id)
    - name: projectname
      value: $(params.project)
    - name: runenv
      value: test
    - name: commitcontent
      value: "$(params.commitcontent)"
  - name: argocd-deploy-test
    runAfter: 
    - build-k8syaml-test
    when:
    - input: "$(tasks.build-k8syaml-test.results.ispush)"
      operator: in
      values: ["yes"]
    taskRef: 
      name: argocd-task-sync-and-wait
    params:
    - name: application-name
      value: "$(params.project)-test"
  - name: interface-test
    runAfter:
    - argocd-deploy-test
    taskRef: 
      name: interface-test
    params:
    - name: projectname
      value: $(params.project)
    workspaces:
    - name: report-dir
      workspace: shared-data
  - name: integration-test
    runAfter:
    - interface-test
    taskRef:
      name: integration-test
    params:
    - name: projectname
      value: $(params.project)
    workspaces:
    - name: report-dir
      workspace: shared-data
  - name: build-k8syaml-prod
    runAfter:
    - integration-test
    when:
      - input: "$(tasks.integration-test.results.test-result)"
        operator: in
        values: ["yes"]
    taskRef: 
      name: set-iaas-repo
    params:
    - name: template_name
      value: python-standard.yml
    - name: image
      value: $(params.image):$(tasks.generate-build-id.results.build-id)
    - name: projectname
      value: $(params.project)
    - name: runenv
      value: prod
    - name: commitcontent
      value: "$(params.commitcontent)"
  finally:
  - name: collect-report
    params:
    - name: SUBPATH
      value: $(params.report-subpath)
    - name: PROJECT
      value: $(params.project)
    taskRef:
      kind: Task
      name: collect-report
    workspaces:
    - name: reportdir
      workspace: shared-data
    - name: nginxdir
      workspace: nginxdir
  - name: notification
    taskRef:
      Name: notification
    params:
      - name: content
        value: "【Tekton - $(params.project)】\\n线下pipeline执行完成\\n测试报告: http://reports.devops.soulchild.cn/$(params.project)"
